PROGRAM PROGRAM_KWD ( ) { STMTS }
PROGRAM_KWD program
ID id
STAT_INT int
STMTS DECLARATIONS ASSIGNMENT
DECLARATIONS PRIMITIVEDECLARATION
DECLARATIONS ARRAYDECLARATION
DECLARATIONS JAGGEDDECLARATION
PRIMITIVEDECLARATION declare ID : integer ;
PRIMITIVEDECLARATION declare ID : real ;
PRIMITIVEDECLARATION declare ID : boolean ;
PRIMITIVEDECLARATION declare list of variables ID_LIST : integer ;
PRIMITIVEDECLARATION declare list of variables ID_LIST : boolean ;
PRIMITIVEDECLARATION declare list of variables ID_LIST : real ;
ID_LIST ID ID_LIST
ID_LIST ID
ARRAYDECLARATION declare ID : array DIMENSION of integer ;
ARRAYDECLARATION declare list of variables ID_LIST : array DIMENSION of integer ;
DIMENSION DIT DIMENSION
DIMENSION DIT
DIT [ ID .. STAT_INT  ] 
DIT [ STAT_INT .. ID  ]
DIT [ STAT_INT .. STAT_INT ] 
DIT [ ID .. ID  ] 
JAGGEDDECLARATION J2D ROWS
J2D declare ID : jagged array [ STAT_INT .. STAT_INT ] [ ] of integer ;
J2D declare list of variables ID_LIST : jagged array [ STAT_INT .. STAT_INT ] [ ] of integer ;
ROWS R1 [ STAT_INT ] : size STAT_INT : values { STAT_SIZE } ROWS
ROWS R1 [ STAT_INT ] : size STAT_INT : values { STAT_SIZE }
STAT_SIZE STAT_INT ; STAT_SIZE
STAT_SIZE STAT_INT 
JAGGEDDECLARATION J3D ROW3D
J3D declare ID : jagged array [ STAT_INT .. STAT_INT ] [ ] [ ] of integer ;
J3D declare list of variables ID_LIST : jagged array [ STAT_INT .. STAT_INT ] [ ] [ ] of integer ;
ROW3D  R1 [ STAT_INT ] : size STAT_INT : values { STAT_SIZE3D } ROW3D
ROW3D  R1 [ STAT_INT ] : size STAT_INT : values { STAT_SIZE3D }
STAT_SIZE3D STAT_LIST ; STAT_SIZE3D
STAT_SIZE3D STAT_LIST 
STAT_LIST STAT_INT STAT_LIST
STAT_LIST EPSILON
EPSILON \0 
ASSIGNMENT ID = EXPRESSION ;
ASSIGNMENT ID = BOOLEXPRESSION ;
ASSIGNMENT ARR_DEF = EXPRESSION ;
ARR_DEF ID [ STAT_LIST ]
EXPRESSION SUBEX OPERATOR EXPRESSION
EXPRESSION SUBEX OPERATOR EXPRESSION
EXPRESSION SUBEX OPERATOR EXPRESSION
EXPRESSION SUBEX
SUBEX STAT_INT
SUBEX ID
SUBEX ARR_DEF
BOOLEXPRESSION ID BOOLOP BOOLEXPRESSION
BOOLEXPRESSION ID 
BOOLOP &&&
BOOLOP |||
OPERATOR +
OPERATOR -
OPERATOR *
OPERATOR /